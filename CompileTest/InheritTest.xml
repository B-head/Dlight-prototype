<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright 2014 B_head

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<compile-test xmlns="CompileTestSchema.xsd">
  <case>
    <code>
      <![CDATA[
      class A
      {
        routine foo :: 10
      }
      
      class B : A
      {
        routine bar :: foo + 25
      }
      
      B =: var o
      stdout := o.foo
      stdout := o.bar
      ]]>
    </code>
    <output>10 35</output>
  </case>
  
  <case>
    <code>
      <![CDATA[
      class A
      {
        protected routine foo :: 10
      }
      
      class B : A
      {
        public routine bar :: foo + 25
      }
      
      B =: var o
      stdout := o.bar
      ]]>
    </code>
    <output>35</output>
  </case>
  
  <case>
    <code>
      <![CDATA[
      class A
      {
        protected routine foo :: 10
      }
      
      class B : A
      {
        public routine bar :: foo + 25
      }
      
      B =: var o
      stdout := o.foo
      stdout := o.bar
      ]]>
    </code>
    <error key="not-accessable"/>
  </case>

  <case>
    <code>
      <![CDATA[
      class A
      {
        static routine foo :: 10
      }
      
      class B : A
      {
        static routine bar :: A|.foo + 25
      }
      
      stdout := A|.foo
      stdout := B|.bar
      ]]>
    </code>
    <output>10 35</output>
  </case>

  <case>
    <code>
      <![CDATA[
      class A
      {
        static routine foo :: 10
      }
      
      class B : A
      {
        static routine bar :: B|.foo + 25
      }
      
      stdout := B|.foo
      stdout := A|.bar
      ]]>
    </code>
    <error key="undefined-identifier"/>
    <error key="undefined-identifier"/>
    <error key="undefined-identifier"/>
  </case>

  <case>
    <code>
      <![CDATA[
      class A
      {
        routine foo :: 10
      }
      
      class B : A
      {
        routine foo :: 25
      }
      
      var a:A
      A =: a
      stdout := a.foo
      B =: a
      stdout := a.foo
      
      B =: var b:B
      stdout := b.foo
      ]]>
    </code>
    <output>10 25 25</output>
  </case>

  <case ignore="true">
    <code>
      <![CDATA[
      trait A
      {
        routine foo :: 10
      }
      
      class B : A
      {
        routine foo :: 25
      }
      
      var a:A
      B =: a
      stdout := a.foo
      ]]>
    </code>
    <output>25</output>
  </case>

  <case ignore="true">
    <code>
      <![CDATA[
      trait A
      {
        routine foo
      }
      
      class B : A
      {
        routine foo :: 25
      }
      
      var a:A
      B =: a
      stdout := a.foo
      ]]>
    </code>
    <output>25</output>
  </case>

  <case ignore="true">
    <code>
      <![CDATA[
      trait A
      {
        routine foo :: 10
      }
      
      var a:A
      A =: a
      stdout := a.foo
      ]]>
    </code>
    <error key="not-instantiatable"/>
  </case>
</compile-test>
