<?xml version="1.0" encoding="utf-8" ?>
<compile-test xmlns="CompileTestSchema.xsd">
  <case>
    <code>
      <![CDATA[
      class A
      {
        routine foo :: 10
      }
      
      class B : A
      {
        routine bar :: foo + 25
      }
      
      B =: var o
      echo o.foo
      echo o.bar
      ]]>
    </code>
    <output>10 35</output>
  </case>
  
  <case>
    <code>
      <![CDATA[
      class A
      {
        protected routine foo :: 10
      }
      
      class B : A
      {
        public routine bar :: foo + 25
      }
      
      B =: var o
      echo o.bar
      ]]>
    </code>
    <output>35</output>
  </case>
  
  <case>
    <code>
      <![CDATA[
      class A
      {
        protected routine foo :: 10
      }
      
      class B : A
      {
        public routine bar :: foo + 25
      }
      
      B =: var o
      echo o.foo
      echo o.bar
      ]]>
    </code>
    <error key="not-accessable"/>
  </case>

  <case>
    <code>
      <![CDATA[
      class A
      {
        static routine foo :: 10
      }
      
      class B : A
      {
        static routine bar :: A|.foo + 25
      }
      
      echo A|.foo
      echo B|.bar
      ]]>
    </code>
    <output>10 35</output>
  </case>

  <case>
    <code>
      <![CDATA[
      class A
      {
        static routine foo :: 10
      }
      
      class B : A
      {
        static routine bar :: B&.foo + 25
      }
      
      echo B|.foo
      echo A|.bar
      ]]>
    </code>
    <error key="undefined-identifier"/>
    <error key="undefined-identifier"/>
    <error key="undefined-identifier"/>
  </case>

  <case>
    <code>
      <![CDATA[
      class A
      {
        routine foo :: 10
      }
      
      class B : A
      {
        routine foo :: 25
      }
      
      var a:A
      A =: a
      echo a.foo
      B =: a
      echo a.foo
      
      B =: var b:B
      echo b.foo
      ]]>
    </code>
    <output>10 25 25</output>
  </case>

  <case ignore="true">
    <code>
      <![CDATA[
      trait A
      {
        routine foo :: 10
      }
      
      class B : A
      {
        routine foo :: 25
      }
      
      var a:A
      B =: a
      echo a.foo
      ]]>
    </code>
    <output>25</output>
  </case>

  <case ignore="true">
    <code>
      <![CDATA[
      trait A
      {
        routine foo
      }
      
      class B : A
      {
        routine foo :: 25
      }
      
      var a:A
      B =: a
      echo a.foo
      ]]>
    </code>
    <output>25</output>
  </case>

  <case ignore="true">
    <code>
      <![CDATA[
      trait A
      {
        routine foo :: 10
      }
      
      var a:A
      A =: a
      echo a.foo
      ]]>
    </code>
    <error key="not-instantiatable"/>
  </case>
</compile-test>
