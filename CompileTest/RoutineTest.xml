<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright 2014 B_head

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<compile-test xmlns="CompileTestSchema.xsd">
  <case>
    <code>
      routine foo() ->Int32 :: 10
      stdout := foo()
    </code>
    <output>10</output>
  </case>

  <case>
    <code>
      routine foo() :: 100
      stdout := foo()
    </code>
    <output>100</output>
  </case>

  <case>
    <code>
      routine foo :: 10
      stdout := foo
    </code>
    <output>10</output>
  </case>

  <case>
    <code>
      routine foo(a:Int32) ->Int32 :: a + 10
      stdout := foo(20)
    </code>
    <output>30</output>
  </case>

  <case>
    <code>
      routine foo(a:Int32) :: a + 10
      stdout := foo := 20
    </code>
    <output>30</output>
  </case>

  <case>
    <code>
      routine foo(a:Double) :: a + 10.5
      stdout := foo := 20
    </code>
    <output>30.5</output>
  </case>

  <case>
    <code>
      function foo(a:Int32) :: a + 10
      stdout := foo := 20
    </code>
    <output>30</output>
  </case>

  <case>
    <code>
      var x := 50
      function foo(a:Int32) :: x += a
      stdout := foo := 20
    </code>
    <error key="forbit-side-effect"/>
  </case>

  <case>
    <code>
      routine foo(a:Int32, b:Int32) :: a % b
      stdout := foo(23, 5)
    </code>
    <output>3</output>
  </case>

  <case>
    <code>
      routine foo(a:Double, b:Double) :: a % b
      stdout := foo(23, 5)
    </code>
    <output>3</output>
  </case>

  <case>
    <code>
      routine foo(a:Int32, b:Double) :: a % b
      stdout := foo(23, 5)
    </code>
    <output>3</output>
  </case>

  <case>
    <code>
      routine foo(a:Int32, b:Int32) :: a % b
      23, 5 =: foo =: stdout
    </code>
    <output>3</output>
  </case>

  <case>
    <code>
      <![CDATA[
      stdout := foo(23, 5)
      routine foo(a:Int32, b:Int32) {
        return a % b
      }
      ]]>
    </code>
    <output>3</output>
  </case>

  <case>
    <code>
      <![CDATA[
      rout foo(a:String) { 
	      a =: stdout
      }
      
      foo"hello world"
      ]]>
    </code>
    <output>hello world</output>
  </case>

  <case>
    <code>
      routine foo(a:Int32) :: a + 20
      routine foo(b:Double) :: b + 55.5
      stdout := foo(0)
      stdout := foo(0.0)
    </code>
    <output>20 55.5</output>
  </case>

  <case>
    <code>
      routine foo(a:Int32) :: a + 20
      routine foo(b:Int32, c:Int32) :: b + c + 55
      stdout := foo := 10
      stdout := foo := 20, 30
    </code>
    <output>30 105</output>
  </case>

  <case>
    <code>
      routine foo(a:Int32, x:Double) :: a + x + 20
      routine foo(b:Int32, c:Int32) :: b + c + 55
      stdout := foo := 10, 55.55
      stdout := foo := 20, 30
    </code>
    <output>85.55 105</output>
  </case>
</compile-test>
