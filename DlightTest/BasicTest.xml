<?xml version="1.0" encoding="utf-8" ?>
<compile-test xmlns="CompileTestSchema.xsd">
  <case>
    <code>
      echo 10
    </code>
    <output>10</output>
  </case>
  
  <case>
    <code>
      echo 10
      echo 20
      echo 30
    </code>
    <output>10 20 30</output>
  </case>
  
  <case>
    <code>
      echo 10 + 10
    </code>
    <output>20</output>
  </case>

  <case>
    <code>
      echo 1 + 2 * 3
    </code>
    <output>7</output>
  </case>

  <case>
    <code>
      echo abc
    </code>
    <error key="undefined-identifier"/>
  </case>
  
  <case>
    <code>
      echo { 30 }
    </code>
    <error key="error-token"/>
    <error key="error-token"/>
  </case>

  <case>
    <code>
      var a := 40
      echo a
    </code>
    <output>40</output>
  </case>

  <case>
    <code>
      var a:Integer32 := 40
      echo a
    </code>
    <output>40</output>
  </case>

  <case>
    <code>
      var a:Int32 := 70
      echo a
    </code>
    <output>70</output>
  </case>

  <case>
    <code>
      var a:Integ45 := 40
      echo a
    </code>
    <error key="undefined-identifier"/>
  </case>

  <case>
    <code>
      50 =: var a =: var b
      echo a * b
    </code>
    <output>2500</output>
  </case>

  <case>
    <code>
      routine foo() :: 100
      echo foo()
    </code>
    <output>100</output>
  </case>

  <case>
    <code>
      routine foo(a:Integer32, b:Integer32) :: a % b
      echo foo(23, 5)
    </code>
    <output>3</output>
  </case>

  <case>
    <code>
      routine foo(a:Integer32) :: a + 20
      routine foo(b:Binary64) :: b + 55.5
      echo foo(0)
      echo foo(0.0)
    </code>
    <output>20 55.5</output>
  </case>

  <case>
    <code>
      echo foo(23, 5)
      routine foo(a:Integer32, b:Integer32) {
      return a % b
      }
    </code>
    <output>3</output>
  </case>

  <case>
    <code>
      class A
      {
      var value := 500
      }

      A() =: var a:A
      echo a.value
    </code>
    <output>500</output>
  </case>

  <case>
    <code>
      class A
      {
      var value := 500
      }

      A() =: var a
      echo a.value
    </code>
    <output>500</output>
  </case>

  <case>
    <code>
      class Counter
      {
      var value := 0
      routine next() :: value := value + 1
      }

      Counter() =: var counter
      echo counter.next()
      echo counter.next()
      echo counter.next()
    </code>
    <output>1 2 3</output>
  </case>
</compile-test>
