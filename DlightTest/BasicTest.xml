<?xml version="1.0" encoding="utf-8" ?>
<compile-test xmlns="CompileTestSchema.xsd">
  <case>
    <code>
      echo 10
    </code>
    <output>10</output>
  </case>
  
  <case>
    <code>
      echo 10
      echo 20
      echo 30
    </code>
    <output>10 20 30</output>
  </case>
  
  <case>
    <code>
      echo 10 + 10
    </code>
    <output>20</output>
  </case>

  <case>
    <code>
      echo 1 + 2 * 3
    </code>
    <output>7</output>
  </case>

  <case ignore="true">
    <code>
      echo 1 + 2.5
    </code>
    <output>3.5</output>
  </case>
  
  <case>
    <code>
      echo { 30 }
    </code>
    <error key="error-token"/>
    <error key="error-token"/>
  </case>

  <case>
    <code>
      class A
      {
      var value := 500
      }

      A() =: var a:A
      echo a.value
    </code>
    <output>500</output>
  </case>

  <case>
    <code>
      class A
      {
      var value := 500
      }

      A() =: var a
      echo a.value
    </code>
    <output>500</output>
  </case>

  <case>
    <code>
      class Counter
      {
      var value := 0
      routine next() :: value := value + 1
      }

      Counter() =: var counter
      echo counter.next()
      echo counter.next()
      echo counter.next()
    </code>
    <output>1 2 3</output>
  </case>

  <case ignore="true">
    <code>
      class A
      {
      var value := 11
      }

      class B
      {
      var value := 22
      routine from(a:A)
      {
      value := a.value
      return this
      }

      var a := A()
      var b:B := a
      echo b.value
      }
    </code>
    <output>11</output>
  </case>
</compile-test>
