<?xml version="1.0" encoding="utf-8" ?>
<compile-test xmlns="CompileTestSchema.xsd">
  <case>
    <code>
      routine foo():Int32 :: 10
      echo foo()
    </code>
    <output>10</output>
  </case>

  <case>
    <code>
      routine foo() :: 100
      echo foo()
    </code>
    <output>100</output>
  </case>

  <case>
    <code>
      routine foo :: 10
      echo foo
    </code>
    <output>10</output>
  </case>

  <case>
    <code>
      routine foo(a:Int32):Int32 :: a + 10
      echo foo(20)
    </code>
    <output>30</output>
  </case>

  <case>
    <code>
      routine foo(a:Int32) :: a + 10
      echo foo := 20
    </code>
    <output>30</output>
  </case>

  <case>
    <code>
      routine foo(a:Binary64) :: a + 10.5
      echo foo := 20
    </code>
    <output>30.5</output>
  </case>

  <case>
    <code>
      function foo(a:Int32) :: a + 10
      echo foo := 20
    </code>
    <output>30</output>
  </case>

  <case ignore="true">
    <code>
      var x := 50
      function foo(a:Int32) :: x += a
      echo foo := 20
    </code>
    <error key="forbit-side-effect"/>
  </case>

  <case>
    <code>
      routine foo(a:Integer32, b:Integer32) :: a % b
      echo foo(23, 5)
    </code>
    <output>3</output>
  </case>

  <case>
    <code>
      routine foo(a:Binary64, b:Binary64) :: a % b
      echo foo(23, 5)
    </code>
    <output>3</output>
  </case>

  <case>
    <code>
      routine foo(a:Integer32, b:Binary64) :: a % b
      echo foo(23, 5)
    </code>
    <output>3</output>
  </case>

  <case>
    <code>
      routine foo(a:Integer32, b:Integer32) :: a % b
      echo 23, 5 =: foo
    </code>
    <output>3</output>
  </case>

  <case>
    <code>
      echo foo(23, 5)
      routine foo(a:Integer32, b:Integer32) {
      return a % b
      }
    </code>
    <output>3</output>
  </case>

  <case>
    <code>
      routine foo(a:Integer32) :: a + 20
      routine foo(b:Binary64) :: b + 55.5
      echo foo(0)
      echo foo(0.0)
    </code>
    <output>20 55.5</output>
  </case>

  <case>
    <code>
      routine foo(a:Int32) :: a + 20
      routine foo(b:Int32, c:Int32) :: b + c + 55
      echo foo := 10
      echo foo := 20, 30
    </code>
    <output>30 105</output>
  </case>

  <case>
    <code>
      routine foo(a:Int32, x:Binary64) :: a + x + 20
      routine foo(b:Int32, c:Int32) :: b + c + 55
      echo foo := 10, 55.55
      echo foo := 20, 30
    </code>
    <output>85.55 105</output>
  </case>
</compile-test>
